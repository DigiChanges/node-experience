{"version":3,"sources":["../../../src/app/content/device-activity-page/DeviceActivityPage.tsx"],"names":["React","AccountServiceContext","TimeUtil","Button","DataList","DataListItem","DataListItemRow","DataListContent","DescriptionList","DescriptionListTerm","DescriptionListDescription","DescriptionListGroup","Grid","GridItem","Label","PageSection","PageSectionVariants","Title","Tooltip","SplitItem","Split","DesktopIcon","MobileAltIcon","SyncAltIcon","Msg","ContinueCancelModal","KeycloakContext","ContentPage","ContentAlert","DeviceActivityPage","Component","constructor","props","context","keycloakService","doDelete","then","logout","device","session","id","fetchDevices","success","browser","os","state","devices","doGet","response","console","log","moveCurrentToTop","data","setState","currentDevice","forEach","index","current","splice","unshift","sessions","currentSession","time","format","elementId","item","element","substring","findDeviceTypeIcon","deviceType","mobile","findOS","toLowerCase","includes","localize","findOSVersion","osVersion","makeClientsString","clients","clientsString","client","clientName","hasOwnProperty","undefined","clientId","length","isShowSignOutAll","render","light","bind","keycloak","signOutAll","map","deviceIndex","sessionIndex","signOutSession","sm","lg","ipAddress","lastAccess","started","expires"],"mappings":"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","sourcesContent":["/*\n * Copyright 2018 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\n\nimport {HttpResponse} from '../../account-service/account.service';\nimport { AccountServiceContext } from '../../account-service/AccountServiceContext';\nimport TimeUtil from '../../util/TimeUtil';\n\nimport {\n  Button,\n  DataList,\n  DataListItem,\n  DataListItemRow,\n  DataListContent,\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListDescription,\n  DescriptionListGroup,\n  Grid,\n  GridItem,\n  Label,\n  PageSection,\n  PageSectionVariants,\n  Title,\n  Tooltip,\n  SplitItem,\n  Split\n} from '@patternfly/react-core';\n\nimport {\n        DesktopIcon,\n        MobileAltIcon,\n        SyncAltIcon,\n} from '@patternfly/react-icons';\n\nimport {Msg} from '../../widgets/Msg';\nimport {ContinueCancelModal} from '../../widgets/ContinueCancelModal';\nimport { KeycloakService } from '../../keycloak-service/keycloak.service';\nimport { KeycloakContext } from '../../keycloak-service/KeycloakContext';\n\nimport {ContentPage} from '../ContentPage';\nimport { ContentAlert } from '../ContentAlert';\n\nexport interface DeviceActivityPageProps {\n}\n\nexport interface DeviceActivityPageState {\n  devices: Device[];\n}\n\ninterface Device {\n  browser: string;\n  current: boolean;\n  device: string;\n  ipAddress: string;\n  lastAccess: number;\n  mobile: boolean;\n  os: string;\n  osVersion: string;\n  sessions: Session[];\n}\n\ninterface Session {\n  browser: string;\n  current: boolean;\n  clients: Client[];\n  expires: number;\n  id: string;\n  ipAddress: string;\n  lastAccess: number;\n  started: number;\n}\n\ninterface Client {\n  clientId: string;\n  clientName: string;\n}\n\n/**\n * @author Stan Silvert ssilvert@redhat.com (C) 2019 Red Hat Inc.\n */\nexport class DeviceActivityPage extends React.Component<DeviceActivityPageProps, DeviceActivityPageState> {\n    static contextType = AccountServiceContext;\n    context: React.ContextType<typeof AccountServiceContext>;\n\n    public constructor(props: DeviceActivityPageProps, context: React.ContextType<typeof AccountServiceContext>) {\n        super(props);\n        this.context = context;\n\n        this.state = {\n          devices: []\n        };\n\n        this.fetchDevices();\n    }\n\n    private signOutAll = (keycloakService: KeycloakService) => {\n      this.context!.doDelete(\"/sessions\")\n        .then( () => {\n          keycloakService.logout();\n        });\n    }\n\n    private signOutSession = (device: Device, session: Session) => {\n      this.context!.doDelete(\"/sessions/\" + session.id)\n          .then (() => {\n            this.fetchDevices();\n            ContentAlert.success('signedOutSession', [session.browser, device.os]);\n          });\n    }\n\n    private fetchDevices(): void {\n      this.context!.doGet<Device[]>(\"/sessions/devices\")\n          .then((response: HttpResponse<Device[]>) => {\n            console.log({response});\n\n            let devices: Device[] = this.moveCurrentToTop(response.data as Device[]);\n\n            this.setState({\n              devices: devices\n            });\n\n          });\n    }\n\n    // current device and session should display at the top of their respective lists\n    private moveCurrentToTop(devices: Device[]): Device[] {\n      let currentDevice: Device = devices[0];\n\n      devices.forEach((device: Device, index: number) => {\n        if (device.current) {\n          currentDevice = device;\n          devices.splice(index, 1);\n          devices.unshift(device);\n        }\n      });\n\n      currentDevice.sessions.forEach((session: Session, index: number) => {\n        if (session.current) {\n          const currentSession: Session[] = currentDevice.sessions.splice(index, 1);\n          currentDevice.sessions.unshift(currentSession[0]);\n        }\n      });\n\n      return devices;\n    }\n\n    private time(time: number): string {\n      return TimeUtil.format(time * 1000);\n    }\n\n    private elementId(item: string, session: Session, element: string='session'): string {\n        return `${element}-${session.id.substring(0,7)}-${item}`;\n    }\n\n    private findDeviceTypeIcon(session: Session, device: Device): React.ReactNode {\n      const deviceType: boolean = device.mobile;\n      if (deviceType === true) return (<MobileAltIcon id={this.elementId('icon-mobile', session, 'device')} />);\n\n      return (<DesktopIcon id={this.elementId('icon-desktop', session, 'device')} />);\n    }\n\n    private findOS(device: Device): string {\n      if (device.os.toLowerCase().includes('unknown')) return Msg.localize('unknownOperatingSystem');\n\n      return device.os;\n    }\n\n    private findOSVersion(device: Device): string {\n      if (device.osVersion.toLowerCase().includes('unknown')) return '';\n\n      return device.osVersion;\n    }\n\n    private makeClientsString(clients: Client[]): string {\n      let clientsString = \"\";\n      clients.forEach( (client: Client, index: number) => {\n        let clientName: string;\n        if (client.hasOwnProperty('clientName') && (client.clientName !== undefined) && (client.clientName !== '')) {\n          clientName = Msg.localize(client.clientName);\n        } else {\n          clientName = client.clientId;\n        }\n\n        clientsString += clientName;\n\n        if (clients.length > index + 1) clientsString += ', ';\n      })\n\n      return clientsString;\n    }\n\n    private isShowSignOutAll(devices: Device[]): boolean {\n      if (devices.length === 0) return false;\n      if (devices.length > 1) return true;\n      if (devices[0].sessions.length > 1) return true;\n\n      return false;\n    }\n\n    public render(): React.ReactNode {\n\n      return (\n          <ContentPage \n            title=\"device-activity\" \n            introMessage=\"signedInDevicesExplanation\" \n          >\n            <PageSection isFilled variant={PageSectionVariants.light}>\n            <Split hasGutter className=\"pf-u-mb-lg\">\n              <SplitItem isFilled>\n                <div id=\"signedInDevicesTitle\" className=\"pf-c-content\"><Title headingLevel=\"h2\" size=\"xl\"><Msg msgKey=\"signedInDevices\"/></Title></div>\n              </SplitItem>\n              <SplitItem>\n                <Tooltip content={<Msg msgKey=\"refreshPage\" />}>\n                  <Button\n                    aria-describedby=\"refresh page\"\n                    id=\"refresh-page\"\n                    variant=\"link\"\n                    onClick={this.fetchDevices.bind(this)}\n                    icon={<SyncAltIcon />}\n                  >\n                    Refresh\n                  </Button>\n                </Tooltip>\n              </SplitItem>\n              <SplitItem>\n              <KeycloakContext.Consumer>\n                { (keycloak: KeycloakService) => (\n                    this.isShowSignOutAll(this.state.devices) &&\n                      <ContinueCancelModal buttonTitle='signOutAllDevices'\n                                    buttonId='sign-out-all'\n                                    modalTitle='signOutAllDevices'\n                                    modalMessage='signOutAllDevicesWarning'\n                                    onContinue={() => this.signOutAll(keycloak)}\n                      />\n                )}\n              </KeycloakContext.Consumer>\n              </SplitItem>\n            </Split>\n            <DataList className=\"signed-in-device-list\" aria-label={Msg.localize('signedInDevices')}>\n              <DataListItem aria-labelledby='sessions' id='device-activity-sessions'>\n                {this.state.devices.map((device: Device, deviceIndex: number) => {\n                  return (\n                    <React.Fragment>\n                      {device.sessions.map((session: Session, sessionIndex: number) => {\n                        return (\n                          <React.Fragment key={'device-' + deviceIndex + '-session-' + sessionIndex}>\n                            <DataListItemRow>\n                              <DataListContent aria-label=\"device-sessions-content\" isHidden={false} className=\"pf-u-flex-grow-1\">\n                                <Grid className=\"signed-in-device-grid\" hasGutter>\n                                  <GridItem className=\"device-icon\" span={1} rowSpan={2}>\n                                    <span>{this.findDeviceTypeIcon(session, device)}</span>\n                                  </GridItem>\n                                  <GridItem sm={8} md={9} span={10}>\n                                    <span id={this.elementId('browser', session)} className=\"pf-u-mr-md\">{this.findOS(device)} {this.findOSVersion(device)} / {session.browser}</span>\n                                    {session.current &&\n                                      <Label color=\"green\"><Msg msgKey=\"currentSession\" /></Label>}\n                                  </GridItem>\n                                  <GridItem className=\"pf-u-text-align-right\" sm={3} md={2} span={1}>\n                                    {!session.current &&\n                                      <ContinueCancelModal buttonTitle='doSignOut'\n                                        buttonId={this.elementId('sign-out', session)}\n                                        modalTitle='doSignOut'\n                                        buttonVariant='secondary'\n                                        modalMessage='signOutWarning'\n                                        onContinue={() => this.signOutSession(device, session)}\n                                      />\n                                    }\n                                  </GridItem>\n                                  <GridItem span={11}>\n                                    <DescriptionList columnModifier={{ sm: '2Col', lg: '3Col' }}>\n                                      <DescriptionListGroup>\n                                        <DescriptionListTerm>{Msg.localize('ipAddress')}</DescriptionListTerm>\n                                        <DescriptionListDescription>{session.ipAddress}</DescriptionListDescription>\n                                      </DescriptionListGroup>\n                                      <DescriptionListGroup>\n                                        <DescriptionListTerm>{Msg.localize('lastAccessedOn')}</DescriptionListTerm>\n                                        <DescriptionListDescription>{this.time(session.lastAccess)}</DescriptionListDescription>\n                                      </DescriptionListGroup>\n                                      <DescriptionListGroup>\n                                        <DescriptionListTerm>{Msg.localize('clients')}</DescriptionListTerm>\n                                        <DescriptionListDescription>{this.makeClientsString(session.clients)}</DescriptionListDescription>\n                                      </DescriptionListGroup>\n                                      <DescriptionListGroup>\n                                        <DescriptionListTerm>{Msg.localize('started')}</DescriptionListTerm>\n                                        <DescriptionListDescription>{this.time(session.started)}</DescriptionListDescription>\n                                      </DescriptionListGroup>\n                                      <DescriptionListGroup>\n                                        <DescriptionListTerm>{Msg.localize('expires')}</DescriptionListTerm>\n                                        <DescriptionListDescription>{this.time(session.expires)}</DescriptionListDescription>\n                                      </DescriptionListGroup>\n                                    </DescriptionList>\n                                  </GridItem>\n                                </Grid>\n                              </DataListContent>\n                            </DataListItemRow>\n                          </React.Fragment>\n                        );\n                      })}\n                    </React.Fragment>\n                  )\n                })}\n              </DataListItem>\n            </DataList>\n          </PageSection>\n        </ContentPage>\n      );\n    }\n};\n"],"file":"DeviceActivityPage.js"}