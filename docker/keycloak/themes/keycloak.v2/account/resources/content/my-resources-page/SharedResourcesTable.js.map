{"version":3,"sources":["../../../src/app/content/my-resources-page/SharedResourcesTable.tsx"],"names":["React","DataList","DataListItem","DataListItemRow","DataListCell","DataListItemCells","ChipGroup","Chip","RepositoryIcon","Msg","AbstractResourcesTable","EmptyMessageState","SharedResourcesTable","constructor","props","state","permissions","Map","render","resources","data","length","localize","map","resource","row","name","client","baseUrl","getClientName","scopes","scope","displayName","shareRequests"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,KAAKA,KAAZ;AAEA,SACIC,QADJ,EAEIC,YAFJ,EAGIC,eAHJ,EAIIC,YAJJ,EAKIC,iBALJ,EAMIC,SANJ,EAOIC,IAPJ;AASA,SAASC,cAAT;AAIA,SAASC,GAAT;AACA,SAASC,sBAAT;AACA,OAAOC,iBAAP;AAOA,OAAO,MAAMC,oBAAN,SAAmCF,sBAAnC,CAA+E;AAE3EG,EAAAA,WAAW,CAACC,KAAD,EAA6B;AAC3C,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,IAAIC,GAAJ;AADJ,KAAb;AAGH;;AAEMC,EAAAA,MAAM,GAAoB;AAC7B,QAAI,KAAKJ,KAAL,CAAWK,SAAX,CAAqBC,IAArB,CAA0BC,MAA1B,KAAqC,CAAzC,EAA4C;AACxC,0BACI,oBAAC,iBAAD;AAAmB,QAAA,IAAI,EAAEb,cAAzB;AAAyC,QAAA,UAAU,EAAC;AAApD,QADJ;AAGH;;AACD,wBACI,oBAAC,QAAD;AAAU,oBAAYC,GAAG,CAACa,QAAJ,CAAa,WAAb,CAAtB;AAAiD,MAAA,EAAE,EAAC;AAApD,oBACI,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAC,iBAAlB;AAAoC,yBAAgB;AAApD,oBACI,oBAAC,eAAD,qBACI,oBAAC,iBAAD;AACI,MAAA,aAAa,EAAE,cACX,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAC,sBAAlB;AAAyC,QAAA,KAAK,EAAE;AAAhD,sBACI,iDAAQ,oBAAC,GAAD;AAAK,QAAA,MAAM,EAAC;AAAZ,QAAR,CADJ,CADW,eAIX,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAC,yBAAlB;AAA4C,QAAA,KAAK,EAAE;AAAnD,sBACI,iDAAQ,oBAAC,GAAD;AAAK,QAAA,MAAM,EAAC;AAAZ,QAAR,CADJ,CAJW,eAOX,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAC,mBAAlB;AAAsC,QAAA,KAAK,EAAE;AAA7C,QAPW,eAQX,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAC,iBAAlB;AAAoC,QAAA,KAAK,EAAE;AAA3C,QARW;AADnB,MADJ,CADJ,CADJ,EAiBK,KAAKR,KAAL,CAAWK,SAAX,CAAqBC,IAArB,CAA0BG,GAA1B,CAA8B,CAACC,QAAD,EAAqBC,GAArB,kBAC3B,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAE,cAAcA,GAAjC;AAAsC,yBAAiBD,QAAQ,CAACE;AAAhE,oBACI,oBAAC,eAAD,qBACI,oBAAC,iBAAD;AACI,MAAA,aAAa,EAAE,cACX,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAE,kBAAkBD,GAArC;AAA0C,QAAA,KAAK,EAAE;AAAjD,sBACI,oBAAC,GAAD;AAAK,QAAA,MAAM,EAAED,QAAQ,CAACE;AAAtB,QADJ,CADW,eAIX,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAE,oBAAoBD,GAAvC;AAA4C,QAAA,KAAK,EAAE;AAAnD,sBACI;AAAG,QAAA,IAAI,EAAED,QAAQ,CAACG,MAAT,CAAgBC;AAAzB,SAAmC,KAAKC,aAAL,CAAmBL,QAAQ,CAACG,MAA5B,CAAnC,CADJ,CAJW,eAOX,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAE,iBAAiBF,GAApC;AAAyC,QAAA,KAAK,EAAE;AAAhD,SACMD,QAAQ,CAACM,MAAT,CAAgBT,MAAhB,GAAyB,CAAzB,iBACF,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAEZ,GAAG,CAACa,QAAJ,CAAa,aAAb;AAAzB,SAEQE,QAAQ,CAACM,MAAT,CAAgBP,GAAhB,CAAoBQ,KAAK,iBACrB,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,KAAK,CAACL,IAAjB;AAAuB,QAAA,UAAU;AAAjC,SACKK,KAAK,CAACC,WAAN,IAAqBD,KAAK,CAACL,IADhC,CADJ,CAFR,CAFJ,CAPW,eAmBX,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAE,aAAaD,GAAhC;AAAqC,QAAA,KAAK,EAAE;AAA5C,SACKD,QAAQ,CAACS,aAAT,CAAuBZ,MAAvB,GAAgC,CAAhC,iBACD,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAEZ,GAAG,CAACa,QAAJ,CAAa,SAAb;AAAzB,SAESE,QAAQ,CAACS,aAAT,CAAuB,CAAvB,EAA0BH,MAA3B,CAA8CP,GAA9C,CAAkDQ,KAAK,iBACnD,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,KAAK,CAACL,IAAjB;AAAuB,QAAA,UAAU;AAAjC,SACKK,KAAK,CAACC,WAAN,IAAqBD,KAAK,CAACL,IADhC,CADJ,CAFR,CAFJ,CAnBW;AADnB,MADJ,CADJ,CADH,CAjBL,CADJ;AA6DH;;AA5EiF","sourcesContent":["/*\n * Copyright 2018 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\n\nimport {\n    DataList,\n    DataListItem,\n    DataListItemRow,\n    DataListCell,\n    DataListItemCells,\n    ChipGroup,\n    Chip\n  } from '@patternfly/react-core';\nimport { RepositoryIcon } from '@patternfly/react-icons';\n\n\nimport { PaginatedResources, Resource, Scope } from \"./resource-model\";\nimport { Msg } from '../../widgets/Msg';\nimport { AbstractResourcesTable, ResourcesTableState } from './AbstractResourceTable';\nimport EmptyMessageState from '../../widgets/EmptyMessageState';\n\nexport interface ResourcesTableProps {\n    resources: PaginatedResources;\n    noResourcesMessage: string;\n}\n\nexport class SharedResourcesTable extends AbstractResourcesTable<ResourcesTableState> {\n\n    public constructor(props: ResourcesTableProps) {\n        super(props);\n        this.state = {\n            permissions: new Map()\n        }\n    }\n\n    public render(): React.ReactNode {\n        if (this.props.resources.data.length === 0) {\n            return (\n                <EmptyMessageState icon={RepositoryIcon} messageKey=\"noResourcesSharedWithYou\"/>\n            );\n        }\n        return (\n            <DataList aria-label={Msg.localize('resources')} id=\"sharedResourcesList\">\n                <DataListItem key='resource-header' aria-labelledby='resource-header'>\n                    <DataListItemRow>\n                        <DataListItemCells\n                            dataListCells={[\n                                <DataListCell key='resource-name-header' width={2}>\n                                    <strong><Msg msgKey='resourceName'/></strong>\n                                </DataListCell>,\n                                <DataListCell key='application-name-header' width={2}>\n                                    <strong><Msg msgKey='application'/></strong>\n                                </DataListCell>,\n                                <DataListCell key='permission-header' width={2}/>,\n                                <DataListCell key='requests-header' width={2}/>,\n                            ]}\n                        />\n                    </DataListItemRow>\n                </DataListItem>\n                {this.props.resources.data.map((resource: Resource, row: number) => (\n                    <DataListItem key={'resource-' + row} aria-labelledby={resource.name}>\n                        <DataListItemRow>\n                            <DataListItemCells\n                                dataListCells={[\n                                    <DataListCell key={'resourceName-' + row} width={2}>\n                                        <Msg msgKey={resource.name}/>\n                                    </DataListCell>,\n                                    <DataListCell key={'resourceClient-' + row} width={2}>\n                                        <a href={resource.client.baseUrl}>{this.getClientName(resource.client)}</a>\n                                    </DataListCell>,\n                                    <DataListCell key={'permissions-' + row} width={2}>\n                                        { resource.scopes.length > 0 &&\n                                        <ChipGroup categoryName={Msg.localize('permissions')}>\n                                            {\n                                                resource.scopes.map(scope => (\n                                                    <Chip key={scope.name} isReadOnly>\n                                                        {scope.displayName || scope.name}\n                                                    </Chip>\n                                                ))\n                                            }\n                                        </ChipGroup>}\n                                    </DataListCell>,\n                                    <DataListCell key={'pending-' + row} width={2}>\n                                        {resource.shareRequests.length > 0 &&\n                                        <ChipGroup categoryName={Msg.localize('pending')}>\n                                            {\n                                                (resource.shareRequests[0].scopes as Scope[]).map(scope => (\n                                                    <Chip key={scope.name} isReadOnly>\n                                                        {scope.displayName || scope.name}\n                                                    </Chip>\n                                                ))\n                                            }\n                                        </ChipGroup>\n                                        }\n                                    </DataListCell>\n                                ]}\n                            />\n                        </DataListItemRow>\n                    </DataListItem>\n                ))}\n            </DataList>\n        );\n    }\n}\n"],"file":"SharedResourcesTable.js"}