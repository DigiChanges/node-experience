{"version":3,"sources":["../../../src/app/content/my-resources-page/MyResourcesPage.tsx"],"names":["React","parse","Button","Level","LevelItem","PageSection","PageSectionVariants","Stack","StackItem","Tab","Tabs","TextInput","AccountServiceContext","Scope","ResourcesTable","ContentPage","Msg","SharedResourcesTable","MY_RESOURCES_TAB","SHARED_WITH_ME_TAB","MyResourcesPage","Component","constructor","props","context","scope","name","displayName","state","myResources","data","forEach","resource","fetchShareRequests","response","doGet","resources","pendingRequest","sharedWithMe","_id","shareRequests","username","scopes","forceUpdate","value","setState","nameFilter","fetchFilteredResources","fetchInitialResources","isSharedWithMeTab","fetchResources","nextUrl","prevUrl","event","tabIndex","activeTabKey","isModalOpen","hasNext","hasPrevious","first","max","params","url","extraParams","then","map","makeScopeObj","parseResourceResponse","fetchPending","fetchPermissionRequests","length","links","headers","get","undefined","parsed","next","prev","makeTab","eventKey","title","sharedResourcesTab","localize","handleFilterRequest","render","bind","light","handleTabClick","handlePreviousClick","handleFirstPageClick","handleNextClick","clearNextPrev","newMyResources"],"mappings":"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","sourcesContent":["/*\n * Copyright 2018 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\n\nimport parse from '../../util/ParseLink';\n\nimport {\n    Button,\n    Level,\n    LevelItem,\n    PageSection,\n    PageSectionVariants,\n    Stack,\n    StackItem,\n    Tab,\n    Tabs,\n    TextInput\n} from '@patternfly/react-core';\n\nimport {HttpResponse} from '../../account-service/account.service';\nimport {AccountServiceContext} from '../../account-service/AccountServiceContext';\n\nimport { PaginatedResources, Resource, Scope, Permission } from './resource-model';\nimport {ResourcesTable} from './ResourcesTable';\nimport {ContentPage} from '../ContentPage';\nimport {Msg} from '../../widgets/Msg';\nimport { SharedResourcesTable } from './SharedResourcesTable';\n\nexport interface MyResourcesPageProps {\n}\n\nexport interface MyResourcesPageState {\n    activeTabKey: number;\n    isModalOpen: boolean;\n    nameFilter: string;\n    myResources: PaginatedResources;\n    sharedWithMe: PaginatedResources;\n}\n\nconst MY_RESOURCES_TAB = 0;\nconst SHARED_WITH_ME_TAB = 1;\n\nexport class MyResourcesPage extends React.Component<MyResourcesPageProps, MyResourcesPageState> {\n    static contextType = AccountServiceContext;\n    context: React.ContextType<typeof AccountServiceContext>;\n    private first = 0;\n    private max = 5;\n\n    public constructor(props: MyResourcesPageProps, context: React.ContextType<typeof AccountServiceContext>) {\n        super(props);\n        this.context = context;\n\n        this.state = {\n            activeTabKey: MY_RESOURCES_TAB,\n            nameFilter: '',\n            isModalOpen: false,\n            myResources: {nextUrl: '', prevUrl: '', data: []},\n            sharedWithMe: {nextUrl: '', prevUrl: '', data: []}\n        };\n\n        this.fetchInitialResources();\n    }\n\n    private isSharedWithMeTab(): boolean {\n        return this.state.activeTabKey === SHARED_WITH_ME_TAB;\n    }\n\n    private hasNext(): boolean {\n        if (this.isSharedWithMeTab()) {\n            return (this.state.sharedWithMe.nextUrl !== null) && (this.state.sharedWithMe.nextUrl !== '');\n        } else {\n            return (this.state.myResources.nextUrl !== null) && (this.state.myResources.nextUrl !== '');\n        }\n    }\n\n    private hasPrevious(): boolean {\n        if (this.isSharedWithMeTab()) {\n            return (this.state.sharedWithMe.prevUrl !== null) && (this.state.sharedWithMe.prevUrl !== '');\n        } else {\n            return (this.state.myResources.prevUrl !== null) && (this.state.myResources.prevUrl !== '');\n        }\n    }\n\n    private fetchInitialResources(): void {\n        if (this.isSharedWithMeTab()) {\n            this.fetchResources(\"/resources/shared-with-me\");\n        } else {\n            this.fetchResources(\"/resources\", {first: this.first, max: this.max});\n        }\n    }\n\n    private fetchFilteredResources(params: Record<string, string|number>): void {\n        if (this.isSharedWithMeTab()) {\n            this.fetchResources(\"/resources/shared-with-me\", params);\n        } else {\n            this.fetchResources(\"/resources\", {...params, first: this.first, max: this.max});\n        }\n    }\n\n    private fetchResources(url: string, extraParams?: Record<string, string|number>): void {\n        this.context!.doGet<Resource[]>(url, {params: extraParams})\n            .then((response: HttpResponse<Resource[]>) => {\n                const resources: Resource[] = response.data || [];\n                resources.forEach((resource: Resource) => resource.shareRequests = []);\n\n                // serialize the Scope objects from JSON so that toString() will work.\n                resources.forEach((resource: Resource) => resource.scopes = resource.scopes.map(this.makeScopeObj));\n\n                if (this.isSharedWithMeTab()) {\n                    this.setState({sharedWithMe: this.parseResourceResponse(response)}, this.fetchPending);\n                } else {\n                    this.setState({myResources: this.parseResourceResponse(response)}, this.fetchPermissionRequests);\n                }\n            });\n    }\n\n    private makeScopeObj = (scope: Scope): Scope => {\n        return new Scope(scope.name, scope.displayName);\n    }\n\n    private fetchPermissionRequests = () => {\n        this.state.myResources.data.forEach((resource: Resource) => {\n            this.fetchShareRequests(resource);\n        });\n    }\n\n    private fetchShareRequests(resource: Resource): void {\n        this.context!.doGet('/resources/' + resource._id + '/permissions/requests')\n            .then((response: HttpResponse<Permission[]>) => {\n                resource.shareRequests = response.data || [];\n                if (resource.shareRequests.length > 0) {\n                    this.forceUpdate();\n                }\n            });\n    }\n\n    private fetchPending = async () => {\n        const response: HttpResponse<Resource[]> = await this.context!.doGet(`/resources/pending-requests`);\n        const resources: Resource[] = response.data || [];\n        resources.forEach((pendingRequest: Resource) => {\n            this.state.sharedWithMe.data.forEach(resource => {\n                if (resource._id === pendingRequest._id) {\n                    resource.shareRequests = [{username: 'me', scopes: pendingRequest.scopes}]\n                    this.forceUpdate();\n                }\n            });\n        });\n    }\n\n    private parseResourceResponse(response: HttpResponse<Resource[]>): PaginatedResources {\n        const links: string | undefined = response.headers.get('link') || undefined;\n        const parsed = parse(links);\n\n        let next = '';\n        let prev = '';\n\n        if (parsed !== null) {\n            if (parsed.next) next = parsed.next;\n            if (parsed.prev) prev = parsed.prev;\n        }\n\n        const resources: Resource[] = response.data || [];\n\n        return {nextUrl: next, prevUrl: prev, data: resources};\n    }\n\n    private makeTab(eventKey: number, title: string, resources: PaginatedResources, sharedResourcesTab: boolean): React.ReactNode {\n        return (\n            <Tab id={title} eventKey={eventKey} title={Msg.localize(title)}>\n                <Stack hasGutter>\n                    <StackItem isFilled><span/></StackItem>\n                    <StackItem isFilled>\n                        <Level hasGutter>\n                            <LevelItem>\n                                <TextInput value={this.state.nameFilter} onChange={this.handleFilterRequest} id={'filter-' + title} type=\"text\" placeholder={Msg.localize('filterByName')} iconVariant=\"search\"/>\n                            </LevelItem>\n                        </Level>\n                    </StackItem>\n                    <StackItem isFilled>\n                        {!sharedResourcesTab && <ResourcesTable resources={resources}/>}\n                        {sharedResourcesTab && <SharedResourcesTable resources={resources}/>}\n                    </StackItem>\n                </Stack>\n            </Tab>\n        )\n    }\n\n    public render(): React.ReactNode {\n        return (\n            <ContentPage title=\"resources\" onRefresh={this.fetchInitialResources.bind(this)}>\n                <PageSection variant={PageSectionVariants.light}>\n                    <Tabs activeKey={this.state.activeTabKey} onSelect={this.handleTabClick}>\n                        {this.makeTab(0, 'myResources', this.state.myResources, false)}\n                        {this.makeTab(1, 'sharedwithMe', this.state.sharedWithMe, true)}\n                    </Tabs>\n\n                    <Level hasGutter>\n                        <LevelItem>\n                            {this.hasPrevious() && <Button onClick={this.handlePreviousClick}>&lt;<Msg msgKey='previousPage'/></Button>}\n                        </LevelItem>\n\n                        <LevelItem>\n                            {this.hasPrevious() && <Button onClick={this.handleFirstPageClick}><Msg msgKey='firstPage'/></Button>}\n                        </LevelItem>\n\n                        <LevelItem>\n                            {this.hasNext() && <Button onClick={this.handleNextClick}><Msg msgKey='nextPage'/>&gt;</Button>}\n                        </LevelItem>\n                    </Level>\n                </PageSection>\n            </ContentPage>\n        );\n    }\n\n    private handleFilterRequest = (value: string) => {\n        this.setState({nameFilter: value});\n        this.fetchFilteredResources({name: value});\n    }\n\n    private clearNextPrev(): void {\n        const newMyResources: PaginatedResources = this.state.myResources;\n        newMyResources.nextUrl = '';\n        newMyResources.prevUrl = '';\n        this.setState({myResources: newMyResources});\n    }\n\n    private handleFirstPageClick = () => {\n        this.fetchInitialResources();\n    }\n\n    private handleNextClick = () => {\n        if (this.isSharedWithMeTab()) {\n            this.fetchResources(this.state.sharedWithMe.nextUrl);\n        } else {\n            this.fetchResources(this.state.myResources.nextUrl);\n        }\n    }\n\n    private handlePreviousClick = () => {\n        if (this.isSharedWithMeTab()) {\n            this.fetchResources(this.state.sharedWithMe.prevUrl);\n        } else {\n            this.fetchResources(this.state.myResources.prevUrl);\n        }\n    }\n\n    private handleTabClick = (event: React.MouseEvent<HTMLInputElement>, tabIndex: number) => {\n        if (this.state.activeTabKey === tabIndex) return;\n\n        this.setState({\n            nameFilter: '',\n            activeTabKey: tabIndex\n        }, () => {this.fetchInitialResources()});\n    };\n};\n"],"file":"MyResourcesPage.js"}