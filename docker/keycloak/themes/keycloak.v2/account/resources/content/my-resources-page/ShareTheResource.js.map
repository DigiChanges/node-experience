{"version":3,"sources":["../../../src/app/content/my-resources-page/ShareTheResource.tsx"],"names":["React","Button","Chip","ChipGroup","Form","FormGroup","Gallery","GalleryItem","Modal","Stack","StackItem","TextInput","ModalVariant","AccountServiceContext","Msg","ContentAlert","PermissionSelect","ShareTheResource","Component","constructor","props","context","rscId","resource","_id","newPermissions","permission","state","permissionsSelected","push","name","permissions","username","usernames","scopes","handleToggleDialog","doPut","then","success","onClose","isOpen","setState","clearState","usernameInput","includes","response","doGet","params","value","data","info","event","key","preventDefault","handleAddUsername","newUsernames","filter","user","permissionsUnSelected","isAddDisabled","isAlreadyShared","isFormInvalid","length","render","children","large","handleAddPermission","localize","handleUsernameChange","handleEnterKeyInAddField","map","currentChip","handleDeleteUsername","selection","sharedWithUsersMsg"],"mappings":"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","sourcesContent":["/*\n * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\n\nimport {\n    Button,\n    Chip,\n    ChipGroup,\n    Form,\n    FormGroup,\n    Gallery,\n    GalleryItem,\n    Modal,\n    Stack,\n    StackItem,\n    TextInput,\n    ModalVariant\n} from '@patternfly/react-core';\n\nimport { AccountServiceContext } from '../../account-service/AccountServiceContext';\nimport { Resource, Permission, Scope } from './resource-model';\nimport { Msg } from '../../widgets/Msg';\nimport {ContentAlert} from '../ContentAlert';\nimport { PermissionSelect } from './PermissionSelect';\n\ninterface ShareTheResourceProps {\n    resource: Resource;\n    permissions: Permission[];\n    sharedWithUsersMsg: React.ReactNode;\n    onClose: () => void;\n    children: (toggle: () => void) => void;\n}\n\ninterface ShareTheResourceState {\n    isOpen: boolean;\n    permissionsSelected: Scope[];\n    permissionsUnSelected: Scope[];\n    usernames: string[];\n    usernameInput: string;\n}\n\n/**\n * @author Stan Silvert ssilvert@redhat.com (C) 2019 Red Hat Inc.\n */\nexport class ShareTheResource extends React.Component<ShareTheResourceProps, ShareTheResourceState> {\n    protected static defaultProps:any = {permissions: []};\n    static contextType = AccountServiceContext;\n    context: React.ContextType<typeof AccountServiceContext>;\n\n    public constructor(props: ShareTheResourceProps, context: React.ContextType<typeof AccountServiceContext>) {\n        super(props);\n        this.context = context;\n    \n        this.state = {\n            isOpen: false,\n            permissionsSelected: [],\n            permissionsUnSelected: this.props.resource.scopes,\n            usernames: [],\n            usernameInput: ''\n        };\n    }\n\n    private clearState(): void {\n        this.setState({\n            permissionsSelected: [],\n            permissionsUnSelected: this.props.resource.scopes,\n            usernames: [],\n            usernameInput: ''\n        });\n    }\n\n    private handleAddPermission = () => {\n        const rscId: string = this.props.resource._id;\n        const newPermissions: string[] = [];\n\n        for (const permission of this.state.permissionsSelected) {\n            newPermissions.push(permission.name);\n        }\n\n        const permissions = [];\n\n        for (const username of this.state.usernames) {\n            permissions.push({username: username, scopes: newPermissions});\n        }\n\n        this.handleToggleDialog();\n\n        this.context!.doPut(`/resources/${rscId}/permissions`, permissions)\n            .then(() => {\n                ContentAlert.success('shareSuccess');\n                this.props.onClose();\n            })\n    };\n\n    private handleToggleDialog = () => {\n       if (this.state.isOpen) {\n           this.setState({isOpen: false});\n           this.props.onClose();\n       } else {\n           this.clearState();\n           this.setState({isOpen: true});\n       }\n    };\n\n    private handleUsernameChange = (username: string) => {\n        this.setState({usernameInput: username});\n    }\n\n    private handleAddUsername = async () => {\n        if ((this.state.usernameInput !== '') && (!this.state.usernames.includes(this.state.usernameInput))) {\n            const response = await this.context!.doGet<{username: string}>(`/resources/${this.props.resource._id}/user`, { params: { value: this.state.usernameInput } });\n            if (response.data && response.data.username) {\n                this.setState({ usernameInput: '', usernames: [...this.state.usernames, this.state.usernameInput] });\n            } else {\n                ContentAlert.info('userNotFound', [this.state.usernameInput]);\n            }\n        }\n    }\n\n    private handleEnterKeyInAddField = (event: React.KeyboardEvent) => {\n        if (event.key === \"Enter\") {\n            event.preventDefault();\n            this.handleAddUsername();\n        }\n    }\n\n    private handleDeleteUsername = (username: string) => {\n        const newUsernames: string[] = this.state.usernames.filter(user => user !== username);\n        this.setState({usernames: newUsernames});\n    }\n\n    private isAddDisabled(): boolean {\n        return this.state.usernameInput === '' || this.isAlreadyShared();\n    }\n\n    private isAlreadyShared(): boolean {\n        for (let permission of this.props.permissions) {\n            if (permission.username === this.state.usernameInput) return true;\n        }\n\n        return false;\n    }\n\n    private isFormInvalid(): boolean {\n        return (this.state.usernames.length === 0) || (this.state.permissionsSelected.length === 0);\n    }\n\n    public render(): React.ReactNode {\n        return (\n            <React.Fragment>\n                {this.props.children(this.handleToggleDialog)}\n\n                <Modal\n                title={'Share the resource - ' + this.props.resource.name}\n                variant={ModalVariant.large}\n                isOpen={this.state.isOpen}\n                onClose={this.handleToggleDialog}\n                actions={[\n                    <Button key=\"cancel\" variant=\"link\" onClick={this.handleToggleDialog}>\n                        <Msg msgKey='cancel'/>\n                    </Button>,\n                    <Button key=\"confirm\" variant=\"primary\" id=\"done\" onClick={this.handleAddPermission} isDisabled={this.isFormInvalid()}>\n                        <Msg msgKey='done'/>\n                    </Button>\n                ]}\n                >\n                    <Stack hasGutter>\n                        <StackItem isFilled>\n                        <Form>\n                            <FormGroup\n                                label=\"Add users to share your resource with\"\n                                type=\"string\"\n                                helperTextInvalid={Msg.localize('resourceAlreadyShared')}\n                                fieldId=\"username\"\n                                isRequired\n                                >\n                                    <Gallery hasGutter>\n                                        <GalleryItem>\n                                            <TextInput\n                                                value={this.state.usernameInput}\n                                                id=\"username\"\n                                                aria-describedby=\"username-helper\"\n                                                placeholder=\"Username or email\"\n                                                onChange={this.handleUsernameChange}\n                                                onKeyPress={this.handleEnterKeyInAddField}\n                                            />\n                                        </GalleryItem>\n                                        <GalleryItem>\n                                            <Button key=\"add-user\" variant=\"primary\" id=\"add\" onClick={this.handleAddUsername} isDisabled={this.isAddDisabled()}>\n                                                <Msg msgKey=\"add\"/>\n                                            </Button>\n                                        </GalleryItem>\n\n                                </Gallery>\n                                <ChipGroup categoryName={Msg.localize('shareWith')}>\n                                    {this.state.usernames.map((currentChip: string) => (\n                                        <Chip key={currentChip} onClick={() => this.handleDeleteUsername(currentChip)}>\n                                            {currentChip}\n                                        </Chip>\n                                    ))}\n                                </ChipGroup>\n                            </FormGroup>\n                            <FormGroup\n                                label=\"\"\n                                fieldId=\"permissions-selected\"\n                            >\n                                <PermissionSelect\n                                    scopes={this.state.permissionsUnSelected}\n                                    onSelect={selection => this.setState({ permissionsSelected: selection })}\n                                    direction=\"up\"\n                                />\n                            </FormGroup>\n                        </Form>\n                    </StackItem>\n                    <StackItem isFilled><br/></StackItem>\n                    <StackItem isFilled>\n                        {this.props.sharedWithUsersMsg}\n                    </StackItem>\n\n                    </Stack>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n"],"file":"ShareTheResource.js"}