{"version":3,"sources":["../../src/app/widgets/ContinueCancelModal.tsx"],"names":["React","Modal","ModalVariant","Button","Msg","ContinueCancelModal","Component","constructor","props","setState","isModalOpen","onClose","handleModalToggle","onContinue","state","render","buttonId","buttonVariant","isDisabled","buttonTitle","small","localize","modalTitle","handleContinue","modalContinueButtonLabel","modalCancelButtonLabel","modalMessage","children"],"mappings":"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","sourcesContent":["/*\n * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as React from 'react';\nimport { Modal, ModalVariant, Button, ButtonProps } from '@patternfly/react-core';\nimport {Msg} from './Msg';\n\n/**\n * For any of these properties that are strings, you can\n * pass in a localization key instead of a static string.\n */\ninterface ContinueCancelModalProps {\n    buttonTitle?: string;\n    buttonVariant?: ButtonProps['variant'];\n    buttonId?: string;\n    render?(toggle: () => void): React.ReactNode;\n    modalTitle: string;\n    modalMessage?: string;\n    modalContinueButtonLabel?: string;\n    modalCancelButtonLabel?: string;\n    onContinue: () => void;\n    onClose?: () => void;\n    isDisabled?: boolean;\n}\n\ninterface ContinueCancelModalState {\n    isModalOpen: boolean;\n}\n\n/**\n * This class renders a button that provides a continue/cancel modal dialog when clicked.  If the user selects 'Continue'\n * then the onContinue function is executed.\n *\n * @author Stan Silvert ssilvert@redhat.com (C) 2019 Red Hat Inc.\n */\nexport class ContinueCancelModal extends React.Component<ContinueCancelModalProps, ContinueCancelModalState> {\n    protected static defaultProps = {\n        buttonVariant: 'primary',\n        modalContinueButtonLabel: 'continue',\n        modalCancelButtonLabel: 'doCancel',\n        isDisabled: false\n    };\n\n    public constructor(props: ContinueCancelModalProps) {\n        super(props);\n        this.state = {\n            isModalOpen: false\n        };\n    }\n\n    private handleModalToggle = () => {\n        this.setState(({ isModalOpen }) => ({\n            isModalOpen: !isModalOpen\n        }));\n        if (this.props.onClose) this.props.onClose();\n    };\n\n    private handleContinue = () => {\n        this.handleModalToggle();\n        this.props.onContinue();\n    }\n\n    public render(): React.ReactNode {\n        const { isModalOpen } = this.state;\n\n        return (\n            <React.Fragment>\n                {!this.props.render &&\n                <Button id={this.props.buttonId} variant={this.props.buttonVariant} onClick={this.handleModalToggle} isDisabled={this.props.isDisabled}>\n                    <Msg msgKey={this.props.buttonTitle!}/>\n                </Button>}\n                {this.props.render && this.props.render(this.handleModalToggle)}\n                <Modal\n                    {...this.props}\n                    variant={ModalVariant.small}\n                    title={Msg.localize(this.props.modalTitle)}\n                    isOpen={isModalOpen}\n                    onClose={this.handleModalToggle}\n                    actions={[\n                        <Button id='modal-confirm' key=\"confirm\" variant=\"primary\" onClick={this.handleContinue}>\n                            <Msg msgKey={this.props.modalContinueButtonLabel!}/>\n                        </Button>,\n                        <Button id='modal-cancel' key=\"cancel\" variant=\"secondary\" onClick={this.handleModalToggle}>\n                            <Msg msgKey={this.props.modalCancelButtonLabel!}/>\n                        </Button>\n                    ]}\n                >\n                    { !this.props.modalMessage && this.props.children}\n                    { this.props.modalMessage && <Msg msgKey={this.props.modalMessage}/>}\n                </Modal>\n            </React.Fragment>\n        );\n    }\n};\n"],"file":"ContinueCancelModal.js"}